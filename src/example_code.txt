/// <summary>
/// Demonstrates typical usage of the PredictionModelBuilder, including model building, prediction, and serialization.
/// </summary>
public static void DemonstratePredictionModelUsage()
{
       ]=]   var x = new Matrix<double>(new double[,] {
        { 1, 2 },
        { 2, 3 },
        { 3, 4 },
        { 4, 5 }
    });
    var y = new Vector<double>(new double[] { 3, 5, 7, 9 });

    // Build the model
    var builder = new PredictionModelBuilder<double>()
        .ConfigureRegression(new SimpleRegression<double>())
        .ConfigureNormalizer(new StandardScoreNormalizer<double>())
        .ConfigureFeatureSelector(new CorrelationFeatureSelector<double>())
        .ConfigureOutlierRemoval(new ZScoreOutlierRemoval<double>())
        .ConfigureOptimizer(new GradientDescentOptimizer<double>())
        .ConfigureFitnessCalculator(new RSquaredFitnessCalculator<double>())
        .ConfigureFitDetector(new DefaultFitDetector<double>());

    var modelResult = builder.Build(x, y);

    // Make predictions
    var newData = new Matrix<double>(new double[,] { { 5, 6 }, { 6, 7 } });
    var predictions = builder.Predict(newData, modelResult);
    Console.WriteLine("Predictions:");
    foreach (var prediction in predictions)
    {
        Console.WriteLine(prediction);
    }

    // Save the model
    string filePath = "model.json";
    builder.SaveModel(modelResult, filePath);
    Console.WriteLine($"Model saved to {filePath}");

    // Load the model
    var loadedModelResult = builder.LoadModel(filePath);
    Console.WriteLine("Model loaded successfully");

    // Serialize the model to JSON
    string jsonString = builder.SerializeModel(modelResult);
    Console.WriteLine("Serialized model:");
    Console.WriteLine(jsonString);

    // Deserialize the model from JSON
    var deserializedModelResult = builder.DeserializeModel(jsonString);
    Console.WriteLine("Model deserialized successfully");

    // Make predictions with the deserialized model
    var newPredictions = builder.Predict(newData, deserializedModelResult);
    Console.WriteLine("Predictions with deserialized model:");
    foreach (var prediction in newPredictions)
    {
        Console.WriteLine(prediction);
    }
}